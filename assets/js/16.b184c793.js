(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{424:function(t,e,n){},501:function(t,e,n){"use strict";var i=n(424);n.n(i).a},519:function(t,e,n){"use strict";n.r(e);var i={data:function(){return{tableHead:"参数 | 说明 | 类型 | 可选值 | 默认值",tableBody:["previewImg |\tpreviewImg属性名 | Array | — | — "]}}},s=(n(501),n(3)),o=Object(s.a)(i,function(){var t=this.$createElement,e=this._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("baseComponent-codeBox",{attrs:{title:"商品放大镜",description:"商城类型详情页商品放大效果",onlineLink:"http://www.ruixiangvip.com/ProductList?searchValue="}},[e("demo-zoom-zoom",{attrs:{previewImg:["https://tuimeizi.cn/random?w=800&h=800&o=1","https://tuimeizi.cn/random?w=800&h=800&o=2"]}}),this._v(" "),e("highlight-code",{attrs:{slot:"codeText",lang:"vue"},slot:"codeText"},[e("pre",[e("code",[this._v('<template>\n  <div class="pic-zoom">\n    <div class="preview-wrapper">\n      <div\n        class="preview-box"\n        @mousemove="move($event)"\n        @mouseleave="out"\n        ref="previewBox"\n        @mouseenter="enter"\n      >\n        <img :src="targetImg" style="width:100%;height:100%;" />\n        <div class="mask" ref="hoverBox" v-show="maskShow"></div>\n      </div>\n      <div class="zoom-box" v-show="zoomVisiable" ref="zoomBox">\n        <img :src="zoomImg" class="bigImg" ref="bigImg" />\n      </div>\n    </div>\n    <div class="piczoomWrapper">\n      <i\n        class="el-icon-arrow-left"\n        @click="getPrePiczoom"\n        :class="leftBtnUnable?\'btnUnable\':\'\'"\n      ></i>\n      <ul\n        class\n        :style="{transform:\'translateX(\'+picsum*64+\'px)\',width:previewImg.length*72+\'px\'}"\n        style="transition: all .8s;"\n      >\n        <li\n          v-for="(item,index) in previewImg"\n          :key="index"\n          @mouseover="getEnter(index)"\n          :class="currentPiczoomIndex==index?\'on\':\'\'"\n        >\n          <img :src="item" v-if="item!=\'\'&&item!=null&&item!=undefined" />\n          \x3c!-- <img src="@/assets/images/lack.svg" alt v-else /> --\x3e\n        </li>\n      </ul>\n      <i\n        class="el-icon-arrow-right"\n        @click="getNextPiczoom"\n        :class="rightBtnUnable?\'btnUnable\':\'\'"\n      ></i>\n    </div>\n  </div>\n</template>\n<script>\n  function offset(el) {\n    let top = el.offsetTop;\n    let left = el.offsetLeft;\n    if (el.offsetParent) {\n      el = el.offsetParent;\n      top += el.offsetTop;\n      left += el.offsetLeft;\n    }\n    return {\n      left: left,\n      top: top\n    };\n  }\n  export default {\n    name: "picZoom",\n    props: {\n      previewImg: {\n        //接受父组件传过来的数组\n        type: Array,\n        default: \'\'\n      }\n    },\n    data() {\n      return {\n        zoomVisiable: false,\n        maskShow: false,\n        picsum: 0,\n        currentPiczoomIndex: 0,\n        targetImg: this.previewImg[0], //取第一张展示，默认\n        imgList: this.previewImg, //父组件传过来的要展示的图片数组\n        zoomImg: this.previewImg[0], //取第一张展示，默认\n        leftBtnUnable: false, //左边按钮不可用\n        rightBtnUnable: false //右边按钮不可用\n      };\n    },\n    watch: {\n      picsum(val, oldVal) {\n        var time = this.imgList.length; //次数\n        var newPicsum = val;\n        if (newPicsum <= -time) {\n          this.leftBtnUnable = true;\n        } else {\n          this.leftBtnUnable = false;\n        }\n        if (newPicsum >= 5) {\n          this.rightBtnUnable = true;\n        } else {\n          this.rightBtnUnable = false;\n        }\n      }\n    },\n    methods: {\n      // 底部图片轮播，移动鼠标，取到图片数组下标，然后取到图片地址并且赋给要展示的图片\n      getEnter(index) {\n        this.currentPiczoomIndex = index;\n        this.targetImg = this.imgList[index];\n        this.zoomImg = this.imgList[index];\n      },\n      //左边滚动按钮\n      getPrePiczoom() {\n        var time = this.imgList.length; //次数\n        if (time <= 5) {\n          return;\n        }\n        if (this.picsum === -time) {\n          return;\n        }\n        this.leftBtnUnable = false;\n        this.time--;\n        this.picsum--; //让轮播图向左移动\n      },\n      //右边滚动按钮\n      getNextPiczoom() {\n        var time = this.imgList.length; //次数\n        if (time <= 5) {\n          return;\n        }\n        if (this.picsum === 5) {\n          return;\n        }\n        this.rightBtnUnable = false;\n        this.time--;\n        this.picsum++; //让轮播图向右移动\n      },\n      enter() {\n        this.maskShow = true;\n      },\n      out() {\n        this.zoomVisiable = false;\n        this.maskShow = false;\n      },\n      move(ev) {\n        this.init();\n        // 鼠标距离屏幕距离\n        let moveX = ev.clientX;\n        let moveY = ev.clientY;\n        // 大盒子距离顶部的距离\n        let offsetLeft = offset(this.oPreviewBox).left;\n        let offsetTop = offset(this.oPreviewBox).top;\n        let left = moveX - offsetLeft - this.houverWidth / 2;\n        let top;\n        if (this.scroll > 0) {\n          top = moveY - offsetTop + this.scroll - this.houverHeight / 2;\n        } else {\n          top = moveY - offsetTop - this.houverHeight / 2;\n        }\n        let maxWidth = this.pWidth - this.houverWidth;\n        let maxHeight = this.pWidth - this.houverHeight;\n        left = left < 0 ? 0 : left > maxWidth ? maxWidth : left;\n        top = top < 0 ? 0 : top > maxHeight ? maxHeight : top;\n        let percentX = left / maxWidth;\n        let percentY = top / maxHeight;\n        this.oHoverBox.style.left = left + "px";\n        this.oHoverBox.style.top = top + "px";\n        this.oBigImg.style.left = percentX * (this.bWidth - this.imgWidth) + "px";\n        this.oBigImg.style.top =\n          percentY * (this.bHeight - this.imgHeight) + "px";\n        this.$emit("move", ev);\n        this.zoomVisiable = true;\n      },\n      init() {\n        this.oHoverBox = this.$refs.hoverBox;\n        this.oPreviewBox = this.$refs.previewBox;\n        this.oBigImg = this.$refs.bigImg;\n        this.imgBox = this.$refs.zoomBox;\n        this.houverWidth = this.oHoverBox.offsetWidth;\n        this.houverHeight = this.oHoverBox.offsetHeight;\n        this.pWidth = this.oPreviewBox.offsetWidth;\n        this.pHeight = this.oPreviewBox.offsetHeight;\n        this.imgWidth = this.oBigImg.offsetWidth;\n        this.imgHeight = this.oBigImg.offsetHeight;\n        this.bWidth = this.imgBox.offsetWidth;\n        this.bHeight = this.imgBox.offsetHeight;\n        this.scroll =document.documentElement.scrollTop || document.body.scrollTop;\n      }\n    }\n  };\n  <\/script>\n')])])])],1),this._v(" "),e("baseComponent-apiTable",{attrs:{title:"Attributes",tableBody:this.tableBody,tableHead:this.tableHead}})],1)},[],!1,null,null,null);e.default=o.exports}}]);